(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{143:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return l})),a.d(e,"metadata",(function(){return c})),a.d(e,"rightToc",(function(){return O})),a.d(e,"default",(function(){return p}));var n=a(2),r=a(9),b=(a(0),a(161)),l={id:"operators",title:"Operators"},c={id:"specification/operators",isDocsHomePage:!1,title:"Operators",description:"Unary Operators",source:"@site/docs/specification/operators.md",permalink:"/docs/specification/operators",editUrl:"https://github.com/whistle-lang/website/edit/master/website/docs/specification/operators.md",sidebar:"someSidebar",previous:{title:"Grammar",permalink:"/docs/specification/grammar"}},O=[{value:"Unary Operators",id:"unary-operators",children:[]},{value:"Binary Operators",id:"binary-operators",children:[{value:"Arithmetic Operators",id:"arithmetic-operators",children:[]},{value:"String Operators",id:"string-operators",children:[]},{value:"Comparison Operators",id:"comparison-operators",children:[]},{value:"Logical Operators",id:"logical-operators",children:[]},{value:"Bitwise Operators",id:"bitwise-operators",children:[]},{value:"Assignment Operators",id:"assignment-operators",children:[]}]},{value:"Conditional Operator",id:"conditional-operator",children:[]}],j={rightToc:O};function p(t){var e=t.components,a=Object(r.a)(t,["components"]);return Object(b.b)("wrapper",Object(n.a)({},j,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"unary-operators"},"Unary Operators"),Object(b.b)("p",null,"Unary operators appear before the operand in ",Object(b.b)("em",{parentName:"p"},"Whistle")," and modifies it in a set way:"),Object(b.b)("p",null,"operator operand"),Object(b.b)("p",null,"For exampe -10 where - is the operator and 10 is the operand."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Signed Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The arithmetic negate operator negates the sign of the operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"!"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The logical not operator inverts the operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"~"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bitwise not operator inverts the bits of the operand")))),Object(b.b)("h2",{id:"binary-operators"},"Binary Operators"),Object(b.b)("p",null,"Binary operators appear between to operands:"),Object(b.b)("p",null,"operand operator operand"),Object(b.b)("p",null,"For exampe 5 - 10 where - is the operator, 5 and 10 is the operands."),Object(b.b)("h3",{id:"arithmetic-operators"},"Arithmetic Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*","*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The exponentiation operator calculates the left operands to the power of the right")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The multiplication operator multiplies the operands")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The division operator divides the operands")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The modulo operator calculates the remainder operands")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"+"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The addition operator adds the operands")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The subtraction operator subtracts the operands")))),Object(b.b)("h3",{id:"string-operators"},"String Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"+"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Concatinates the right operand to the left")))),Object(b.b)("h3",{id:"comparison-operators"},"Comparison Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),">="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the left operand greater than or equal to the right operand?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),">"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the left operand greater than the right operand?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the left operand less than or equal to the right operand?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the left operand less than the right operand?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"=="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Are the operands equal?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"!="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Are the operands unequal?")))),Object(b.b)("h3",{id:"logical-operators"},"Logical Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"&&"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Are both the operands true?")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"11"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"|","|"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is one of the operands true?")))),Object(b.b)("h3",{id:"bitwise-operators"},"Bitwise Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<<"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bitwise left shift operator shifts the left operand in binary representation right operand number of bits to the left")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),">>"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bitwise left shift operator shifts the left operand in binary representation right operand number of bits to the right")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"7"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"&"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bitwise and operator returns a one in each bit position for which the corresponding bits of both operands are ones")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"8"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"^"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bitwise xor returns a zero in each bit position for which the corresponding bits are the same")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"9"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer")))),Object(b.b)("h3",{id:"assignment-operators"},"Assignment Operators"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"precedence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"operand"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description/equivalent"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"12"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*","*","="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand ","*","*"," right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"13"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*","="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand ","*"," right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"13"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand / right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"13"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand % right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"14"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"+="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand + right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"14"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"+="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand + right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"14"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand - right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"15"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),">>="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand >> right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"15"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<<="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand << right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"16"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"&="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand & right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"17"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"^="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand ^ right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"18"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"|","="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand ","|"," right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"19"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"&&="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand && right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"|","|","="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"left_operand = left_operand ","|","|"," right_operand")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"21"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"="),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Assigns the right value to the left")))),Object(b.b)("h2",{id:"conditional-operator"},"Conditional Operator"),Object(b.b)("p",null,"The conditional operator is the only operator which takes three operands:"),Object(b.b)("p",null,"operand if operand else operand"),Object(b.b)("p",null,"Where the first operand signifies the value if the second operand is true, otherwise the third operand is the value of the operation."))}p.isMDXComponent=!0}}]);